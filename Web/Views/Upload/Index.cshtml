
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="file" id="my_file_input" />
<div id='my_file_output'></div>


<script type="text/javascript">

    var oFileIn;
    var dataUpload;

    oFileIn = document.getElementById('my_file_input');
    if (oFileIn.addEventListener) {
        oFileIn.addEventListener('change', filePicked, false);
    }

    function onResUploadDistrictQuantity(data) {
        debugger;
    }

    function UpdateDistrict(data) {
        debugger;
        sendRequest($Controller.Upload, $Action.UploadDistrictQuantity, data, onResUploadDistrictQuantity);
    }

    function filePicked(oEvent) {
        var oFile = oEvent.target.files[0];
        // Create A File Reader HTML5
        var reader = new FileReader();

        // Ready The Event For When A File Gets Selected
        reader.onload = function (e) {
            var data = e.target.result;
            var cfb = XLS.CFB.read(data, { type: 'binary' });
            var wb = XLS.parse_xlscfb(cfb);
            // Loop Over Each Sheet
            wb.SheetNames.forEach(function (sheetName) {
                // Obtain The Current Row As CSV
                var sCsv = XLS.utils.make_csv(wb.Sheets[sheetName]);
                var oJs = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);

                $("#my_file_output").html(sCsv);
                UpdateDistrict(oJs);
            });
        };

        // Tell JS To Start Reading The File.. You could delay this if desired
        reader.readAsBinaryString(oFile);
    }

</script>


